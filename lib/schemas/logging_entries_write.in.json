{
    "type": "object",
    "properties": {
        "access_token": {
            "type": "string"
        },
        "alt": {
            "type": "string",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "default": "json"
        },
        "callback": {
            "type": "string"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "uploadType": {
            "type": "string"
        },
        "upload_protocol": {
            "type": "string"
        },
        "requestBody": {
            "description": "The parameters to WriteLogEntries.",
            "properties": {
                "dryRun": {
                    "description": "Optional. If true, the request should expect normal response, but the entries won't be persisted nor exported. Useful for checking whether the logging API endpoints are working properly before sending valuable data.",
                    "type": "boolean"
                },
                "entries": {
                    "description": "Required. The log entries to send to Logging. The order of log entries in this list does not matter. Values supplied in this method's log_name, resource, and labels fields are copied into those log entries in this list that do not include values for their corresponding fields. For more information, see the LogEntry type.If the timestamp or insert_id fields are missing in log entries, then this method supplies the current time or a unique identifier, respectively. The supplied values are chosen so that, among the log entries that did not supply their own values, the entries earlier in the list will sort before the entries later in the list. See the entries.list method.Log entries with timestamps that are more than the logs retention period in the past or more than 24 hours in the future will not be available when calling entries.list. However, those log entries can still be exported with LogSinks.To improve throughput and to avoid exceeding the quota limit for calls to entries.write, you should try to include several log entries in this list, rather than calling this method for each individual log entry.",
                    "items": {
                        "description": "An individual entry in a log.",
                        "properties": {
                            "httpRequest": {
                                "description": "Optional. Information about the HTTP request associated with this log entry, if applicable.",
                                "properties": {
                                    "cacheFillBytes": {
                                        "description": "The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.",
                                        "format": "int64",
                                        "type": "string"
                                    },
                                    "cacheHit": {
                                        "description": "Whether or not an entity was served from cache (with or without validation).",
                                        "type": "boolean"
                                    },
                                    "cacheLookup": {
                                        "description": "Whether or not a cache lookup was attempted.",
                                        "type": "boolean"
                                    },
                                    "cacheValidatedWithOriginServer": {
                                        "description": "Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if cache_hit is True.",
                                        "type": "boolean"
                                    },
                                    "latency": {
                                        "description": "The request processing latency on the server, from the time the request was received until the response was sent.",
                                        "format": "google-duration",
                                        "type": "string"
                                    },
                                    "protocol": {
                                        "description": "Protocol used for the request. Examples: \"HTTP/1.1\", \"HTTP/2\", \"websocket\"",
                                        "type": "string"
                                    },
                                    "referer": {
                                        "description": "The referer URL of the request, as defined in HTTP/1.1 Header Field Definitions (http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).",
                                        "type": "string"
                                    },
                                    "remoteIp": {
                                        "description": "The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: \"192.168.1.1\", \"FE80::0202:B3FF:FE1E:8329\".",
                                        "type": "string"
                                    },
                                    "requestMethod": {
                                        "description": "The request method. Examples: \"GET\", \"HEAD\", \"PUT\", \"POST\".",
                                        "type": "string"
                                    },
                                    "requestSize": {
                                        "description": "The size of the HTTP request message in bytes, including the request headers and the request body.",
                                        "format": "int64",
                                        "type": "string"
                                    },
                                    "requestUrl": {
                                        "description": "The scheme (http, https), the host name, the path and the query portion of the URL that was requested. Example: \"http://example.com/some/info?color=red\".",
                                        "type": "string"
                                    },
                                    "responseSize": {
                                        "description": "The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body.",
                                        "format": "int64",
                                        "type": "string"
                                    },
                                    "serverIp": {
                                        "description": "The IP address (IPv4 or IPv6) of the origin server that the request was sent to.",
                                        "type": "string"
                                    },
                                    "status": {
                                        "description": "The response code indicating the status of response. Examples: 200, 404.",
                                        "format": "int32",
                                        "type": "integer"
                                    },
                                    "userAgent": {
                                        "description": "The user agent sent by the client. Example: \"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET\nCLR 1.0.3705)\".",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "insertId": {
                                "description": "Optional. A unique identifier for the log entry. If you provide a value, then Logging considers other log entries in the same project, with the same timestamp, and with the same insert_id to be duplicates which can be removed. If omitted in new log entries, then Logging assigns its own unique identifier. The insert_id is also used to order log entries that have the same timestamp value.",
                                "type": "string"
                            },
                            "jsonPayload": {
                                "additionalProperties": {
                                    "description": "Properties of the object."
                                },
                                "description": "The log entry payload, represented as a structure that is expressed as a JSON object.",
                                "type": "object"
                            },
                            "labels": {
                                "additionalProperties": {
                                    "type": "string"
                                },
                                "description": "Optional. A set of user-defined (key, value) data that provides additional information about the log entry.",
                                "type": "object"
                            },
                            "logName": {
                                "description": "Required. The resource name of the log to which this log entry belongs:\n\"projects/[PROJECT_ID]/logs/[LOG_ID]\"\n\"organizations/[ORGANIZATION_ID]/logs/[LOG_ID]\"\n\"billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]\"\n\"folders/[FOLDER_ID]/logs/[LOG_ID]\"\nA project number may optionally be used in place of PROJECT_ID. The project number is translated to its corresponding PROJECT_ID internally and the log_name field will contain PROJECT_ID in queries and exports.[LOG_ID] must be URL-encoded within log_name. Example: \"organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity\". [LOG_ID] must be less than 512 characters long and can only include the following characters: upper and lower case alphanumeric characters, forward-slash, underscore, hyphen, and period.For backward compatibility, if log_name begins with a forward-slash, such as /projects/..., then the log entry is ingested as usual but the forward-slash is removed. Listing the log entry will not show the leading slash and filtering for a log name with a leading slash will never return any results.",
                                "type": "string"
                            },
                            "metadata": {
                                "description": "Output only. Additional metadata about the monitored resource.Only k8s_container, k8s_pod, and k8s_node MonitoredResources have this field populated.",
                                "properties": {
                                    "systemLabels": {
                                        "additionalProperties": {
                                            "description": "Properties of the object."
                                        },
                                        "description": "Output only. Values for predefined system metadata labels. System labels are a kind of metadata extracted by Google, including \"machine_image\", \"vpc\", \"subnet_id\", \"security_group\", \"name\", etc. System label values can be only strings, Boolean values, or a list of strings. For example:\n{ \"name\": \"my-test-instance\",\n  \"security_group\": [\"a\", \"b\", \"c\"],\n  \"spot_instance\": false }\n",
                                        "type": "object"
                                    },
                                    "userLabels": {
                                        "additionalProperties": {
                                            "type": "string"
                                        },
                                        "description": "Output only. A map of user-defined metadata labels.",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            },
                            "operation": {
                                "description": "Optional. Information about an operation associated with the log entry, if applicable.",
                                "properties": {
                                    "first": {
                                        "description": "Optional. Set this to True if this is the first log entry in the operation.",
                                        "type": "boolean"
                                    },
                                    "id": {
                                        "description": "Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation.",
                                        "type": "string"
                                    },
                                    "last": {
                                        "description": "Optional. Set this to True if this is the last log entry in the operation.",
                                        "type": "boolean"
                                    },
                                    "producer": {
                                        "description": "Optional. An arbitrary producer identifier. The combination of id and producer must be globally unique. Examples for producer: \"MyDivision.MyBigCompany.com\", \"github.com/MyProject/MyApplication\".",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "protoPayload": {
                                "additionalProperties": {
                                    "description": "Properties of the object. Contains field @type with type URL."
                                },
                                "description": "The log entry payload, represented as a protocol buffer. Some Google Cloud Platform services use this field for their log entry payloads.",
                                "type": "object"
                            },
                            "receiveTimestamp": {
                                "description": "Output only. The time the log entry was received by Logging.",
                                "format": "google-datetime",
                                "type": "string"
                            },
                            "resource": {
                                "description": "Required. The primary monitored resource associated with this log entry.Example: a log entry that reports a database error would be associated with the monitored resource designating the particular database that reported the error.",
                                "properties": {
                                    "labels": {
                                        "additionalProperties": {
                                            "type": "string"
                                        },
                                        "description": "Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \"project_id\", \"instance_id\", and \"zone\".",
                                        "type": "object"
                                    },
                                    "type": {
                                        "description": "Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "severity": {
                                "description": "Optional. The severity of the log entry. The default value is LogSeverity.DEFAULT.",
                                "enum": [
                                    "DEFAULT",
                                    "DEBUG",
                                    "INFO",
                                    "NOTICE",
                                    "WARNING",
                                    "ERROR",
                                    "CRITICAL",
                                    "ALERT",
                                    "EMERGENCY"
                                ],
                                "type": "string"
                            },
                            "sourceLocation": {
                                "description": "Optional. Source code location information associated with the log entry, if any.",
                                "properties": {
                                    "file": {
                                        "description": "Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name.",
                                        "type": "string"
                                    },
                                    "function": {
                                        "description": "Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: qual.if.ied.Class.method (Java), dir/package.func (Go), function (Python).",
                                        "type": "string"
                                    },
                                    "line": {
                                        "description": "Optional. Line within the source file. 1-based; 0 indicates no line number available.",
                                        "format": "int64",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "spanId": {
                                "description": "Optional. The span ID within the trace associated with the log entry.For Trace spans, this is the same format that the Trace API v2 uses: a 16-character hexadecimal encoding of an 8-byte array, such as <code>\"000000000000004a\"</code>.",
                                "type": "string"
                            },
                            "textPayload": {
                                "description": "The log entry payload, represented as a Unicode string (UTF-8).",
                                "type": "string"
                            },
                            "timestamp": {
                                "description": "Optional. The time the event described by the log entry occurred. This time is used to compute the log entry's age and to enforce the logs retention period. If this field is omitted in a new log entry, then Logging assigns it the current time. Timestamps have nanosecond accuracy, but trailing zeros in the fractional seconds might be omitted when the timestamp is displayed.Incoming log entries should have timestamps that are no more than the logs retention period in the past, and no more than 24 hours in the future. Log entries outside those time boundaries will not be available when calling entries.list, but those log entries can still be exported with LogSinks.",
                                "format": "google-datetime",
                                "type": "string"
                            },
                            "trace": {
                                "description": "Optional. Resource name of the trace associated with the log entry, if any. If it contains a relative resource name, the name is assumed to be relative to //tracing.googleapis.com. Example: projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824",
                                "type": "string"
                            },
                            "traceSampled": {
                                "description": "Optional. The sampling decision of the trace associated with the log entry.True means that the trace resource name in the trace field was sampled for storage in a trace backend. False means that the trace was not sampled for storage when this log entry was written, or the sampling decision was unknown at the time. A non-sampled trace value is still useful as a request correlation identifier. The default is False.",
                                "type": "boolean"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                "labels": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Optional. Default labels that are added to the labels field of all log entries in entries. If a log entry already has a label with the same key as a label in this parameter, then the log entry's label is not changed. See LogEntry.",
                    "type": "object"
                },
                "logName": {
                    "description": "Optional. A default log resource name that is assigned to all log entries in entries that do not specify a value for log_name:\n\"projects/[PROJECT_ID]/logs/[LOG_ID]\"\n\"organizations/[ORGANIZATION_ID]/logs/[LOG_ID]\"\n\"billingAccounts/[BILLING_ACCOUNT_ID]/logs/[LOG_ID]\"\n\"folders/[FOLDER_ID]/logs/[LOG_ID]\"\n[LOG_ID] must be URL-encoded. For example:\n\"projects/my-project-id/logs/syslog\"\n\"organizations/1234567890/logs/cloudresourcemanager.googleapis.com%2Factivity\"\nThe permission <code>logging.logEntries.create</code> is needed on each project, organization, billing account, or folder that is receiving new log entries, whether the resource is specified in <code>logName</code> or in an individual log entry.",
                    "type": "string"
                },
                "partialSuccess": {
                    "description": "Optional. Whether valid entries should be written even if some other entries fail due to INVALID_ARGUMENT or PERMISSION_DENIED errors. If any entry is not written, then the response status is the error associated with one of the failed entries and the response includes error details keyed by the entries' zero-based index in the entries.write method.",
                    "type": "boolean"
                },
                "resource": {
                    "description": "Optional. A default monitored resource object that is assigned to all log entries in entries that do not specify a value for resource. Example:\n{ \"type\": \"gce_instance\",\n  \"labels\": {\n    \"zone\": \"us-central1-a\", \"instance_id\": \"00000000000000000000\" }}\nSee LogEntry.",
                    "properties": {
                        "labels": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "description": "Required. Values for all of the labels listed in the associated monitored resource descriptor. For example, Compute Engine VM instances use the labels \"project_id\", \"instance_id\", and \"zone\".",
                            "type": "object"
                        },
                        "type": {
                            "description": "Required. The monitored resource type. This field must match the type field of a MonitoredResourceDescriptor object. For example, the type of a Compute Engine VM instance is gce_instance.",
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        },
        "__xgafv": {
            "type": "string",
            "enum": [
                "1",
                "2"
            ]
        }
    }
}