{
    "type": "object",
    "properties": {
        "metricName": {
            "required": true,
            "type": "string"
        },
        "access_token": {
            "type": "string"
        },
        "alt": {
            "type": "string",
            "enum": [
                "json",
                "media",
                "proto"
            ],
            "default": "json"
        },
        "callback": {
            "type": "string"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "uploadType": {
            "type": "string"
        },
        "upload_protocol": {
            "type": "string"
        },
        "requestBody": {
            "description": "Describes a logs-based metric. The value of the metric is the number of log entries that match a logs filter in a given time interval.Logs-based metric can also be used to extract values from logs and create a a distribution of the values. The distribution records the statistics of the extracted values along with an optional histogram of the values as specified by the bucket options.",
            "properties": {
                "bucketOptions": {
                    "description": "Optional. The bucket_options are required when the logs-based metric is using a DISTRIBUTION value type and it describes the bucket boundaries used to create a histogram of the extracted values.",
                    "properties": {
                        "explicitBuckets": {
                            "description": "The explicit buckets.",
                            "properties": {
                                "bounds": {
                                    "description": "The values must be monotonically increasing.",
                                    "items": {
                                        "format": "double",
                                        "type": "number"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "exponentialBuckets": {
                            "description": "The exponential buckets.",
                            "properties": {
                                "growthFactor": {
                                    "description": "Must be greater than 1.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "numFiniteBuckets": {
                                    "description": "Must be greater than 0.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "scale": {
                                    "description": "Must be greater than 0.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        },
                        "linearBuckets": {
                            "description": "The linear bucket.",
                            "properties": {
                                "numFiniteBuckets": {
                                    "description": "Must be greater than 0.",
                                    "format": "int32",
                                    "type": "integer"
                                },
                                "offset": {
                                    "description": "Lower bound of the first bucket.",
                                    "format": "double",
                                    "type": "number"
                                },
                                "width": {
                                    "description": "Must be greater than 0.",
                                    "format": "double",
                                    "type": "number"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "createTime": {
                    "description": "Output only. The creation timestamp of the metric.This field may not be present for older metrics.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "description": {
                    "description": "Optional. A description of this metric, which is used in documentation. The maximum length of the description is 8000 characters.",
                    "type": "string"
                },
                "filter": {
                    "description": "Required. An advanced logs filter which is used to match log entries. Example:\n\"resource.type=gae_app AND severity>=ERROR\"\nThe maximum length of the filter is 20000 characters.",
                    "type": "string"
                },
                "labelExtractors": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Optional. A map from a label key string to an extractor expression which is used to extract data from a log entry field and assign as the label value. Each label key specified in the LabelDescriptor must have an associated extractor expression in this map. The syntax of the extractor expression is the same as for the value_extractor field.The extracted value is converted to the type defined in the label descriptor. If the either the extraction or the type conversion fails, the label will have a default value. The default value for a string label is an empty string, for an integer label its 0, and for a boolean label its false.Note that there are upper bounds on the maximum number of labels and the number of active time series that are allowed in a project.",
                    "type": "object"
                },
                "metricDescriptor": {
                    "description": "Optional. The metric descriptor associated with the logs-based metric. If unspecified, it uses a default metric descriptor with a DELTA metric kind, INT64 value type, with no labels and a unit of \"1\". Such a metric counts the number of log entries matching the filter expression.The name, type, and description fields in the metric_descriptor are output only, and is constructed using the name and description field in the LogMetric.To create a logs-based metric that records a distribution of log values, a DELTA metric kind with a DISTRIBUTION value type must be used along with a value_extractor expression in the LogMetric.Each label in the metric descriptor must have a matching label name as the key and an extractor expression as the value in the label_extractors map.The metric_kind and value_type fields in the metric_descriptor cannot be updated once initially configured. New labels can be added in the metric_descriptor, but existing labels cannot be modified except for their description.",
                    "properties": {
                        "description": {
                            "description": "A detailed description of the metric, which can be used in documentation.",
                            "type": "string"
                        },
                        "displayName": {
                            "description": "A concise name for the metric, which can be displayed in user interfaces. Use sentence case without an ending period, for example \"Request count\". This field is optional but it is recommended to be set for any metrics associated with user-visible concepts, such as Quota.",
                            "type": "string"
                        },
                        "labels": {
                            "description": "The set of labels that can be used to describe a specific instance of this metric type. For example, the appengine.googleapis.com/http/server/response_latencies metric type has a label for the HTTP response code, response_code, so you can look at latencies for successful responses or just for responses that failed.",
                            "items": {
                                "description": "A description of a label.",
                                "properties": {
                                    "description": {
                                        "description": "A human-readable description for the label.",
                                        "type": "string"
                                    },
                                    "key": {
                                        "description": "The label key.",
                                        "type": "string"
                                    },
                                    "valueType": {
                                        "description": "The type of data that can be assigned to the label.",
                                        "enum": [
                                            "STRING",
                                            "BOOL",
                                            "INT64"
                                        ],
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        "metadata": {
                            "description": "Optional. Metadata which can be used to guide usage of the metric.",
                            "properties": {
                                "ingestDelay": {
                                    "description": "The delay of data points caused by ingestion. Data points older than this age are guaranteed to be ingested and available to be read, excluding data loss due to errors.",
                                    "format": "google-duration",
                                    "type": "string"
                                },
                                "launchStage": {
                                    "description": "The launch stage of the metric definition.",
                                    "enum": [
                                        "LAUNCH_STAGE_UNSPECIFIED",
                                        "EARLY_ACCESS",
                                        "ALPHA",
                                        "BETA",
                                        "GA",
                                        "DEPRECATED"
                                    ],
                                    "type": "string"
                                },
                                "samplePeriod": {
                                    "description": "The sampling period of metric data points. For metrics which are written periodically, consecutive data points are stored at this time interval, excluding data loss due to errors. Metrics with a higher granularity have a smaller sampling period.",
                                    "format": "google-duration",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "metricKind": {
                            "description": "Whether the metric records instantaneous values, changes to a value, etc. Some combinations of metric_kind and value_type might not be supported.",
                            "enum": [
                                "METRIC_KIND_UNSPECIFIED",
                                "GAUGE",
                                "DELTA",
                                "CUMULATIVE"
                            ],
                            "type": "string"
                        },
                        "name": {
                            "description": "The resource name of the metric descriptor.",
                            "type": "string"
                        },
                        "type": {
                            "description": "The metric type, including its DNS name prefix. The type is not URL-encoded. All user-defined metric types have the DNS name custom.googleapis.com or external.googleapis.com. Metric types should use a natural hierarchical grouping. For example:\n\"custom.googleapis.com/invoice/paid/amount\"\n\"external.googleapis.com/prometheus/up\"\n\"appengine.googleapis.com/http/server/response_latencies\"\n",
                            "type": "string"
                        },
                        "unit": {
                            "description": "The unit in which the metric value is reported. It is only applicable if the value_type is INT64, DOUBLE, or DISTRIBUTION. The supported units are a subset of The Unified Code for Units of Measure (http://unitsofmeasure.org/ucum.html) standard:Basic units (UNIT)\nbit bit\nBy byte\ns second\nmin minute\nh hour\nd dayPrefixes (PREFIX)\nk kilo (10**3)\nM mega (10**6)\nG giga (10**9)\nT tera (10**12)\nP peta (10**15)\nE exa (10**18)\nZ zetta (10**21)\nY yotta (10**24)\nm milli (10**-3)\nu micro (10**-6)\nn nano (10**-9)\np pico (10**-12)\nf femto (10**-15)\na atto (10**-18)\nz zepto (10**-21)\ny yocto (10**-24)\nKi kibi (2**10)\nMi mebi (2**20)\nGi gibi (2**30)\nTi tebi (2**40)GrammarThe grammar also includes these connectors:\n/ division (as an infix operator, e.g. 1/s).\n. multiplication (as an infix operator, e.g. GBy.d)The grammar for a unit is as follows:\nExpression = Component { \".\" Component } { \"/\" Component } ;\n\nComponent = ( [ PREFIX ] UNIT | \"%\" ) [ Annotation ]\n          | Annotation\n          | \"1\"\n          ;\n\nAnnotation = \"{\" NAME \"}\" ;\nNotes:\nAnnotation is just a comment if it follows a UNIT and is  equivalent to 1 if it is used alone. For examples,  {requests}/s == 1/s, By{transmitted}/s == By/s.\nNAME is a sequence of non-blank printable ASCII characters not  containing '{' or '}'.\n1 represents dimensionless value 1, such as in 1/s.\n% represents dimensionless value 1/100, and annotates values giving  a percentage.",
                            "type": "string"
                        },
                        "valueType": {
                            "description": "Whether the measurement is an integer, a floating-point number, etc. Some combinations of metric_kind and value_type might not be supported.",
                            "enum": [
                                "VALUE_TYPE_UNSPECIFIED",
                                "BOOL",
                                "INT64",
                                "DOUBLE",
                                "STRING",
                                "DISTRIBUTION",
                                "MONEY"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "name": {
                    "description": "Required. The client-assigned metric identifier. Examples: \"error_count\", \"nginx/requests\".Metric identifiers are limited to 100 characters and can include only the following characters: A-Z, a-z, 0-9, and the special characters _-.,+!*',()%/. The forward-slash character (/) denotes a hierarchy of name pieces, and it cannot be the first character of the name.The metric identifier in this field must not be URL-encoded (https://en.wikipedia.org/wiki/Percent-encoding). However, when the metric identifier appears as the [METRIC_ID] part of a metric_name API parameter, then the metric identifier must be URL-encoded. Example: \"projects/my-project/metrics/nginx%2Frequests\".",
                    "type": "string"
                },
                "updateTime": {
                    "description": "Output only. The last update timestamp of the metric.This field may not be present for older metrics.",
                    "format": "google-datetime",
                    "type": "string"
                },
                "valueExtractor": {
                    "description": "Optional. A value_extractor is required when using a distribution logs-based metric to extract the values to record from a log entry. Two functions are supported for value extraction: EXTRACT(field) or REGEXP_EXTRACT(field, regex). The argument are:  1. field: The name of the log entry field from which the value is to be  extracted.  2. regex: A regular expression using the Google RE2 syntax  (https://github.com/google/re2/wiki/Syntax) with a single capture  group to extract data from the specified log entry field. The value  of the field is converted to a string before applying the regex.  It is an error to specify a regex that does not include exactly one  capture group.The result of the extraction must be convertible to a double type, as the distribution always records double values. If either the extraction or the conversion to double fails, then those values are not recorded in the distribution.Example: REGEXP_EXTRACT(jsonPayload.request, \".*quantity=(\\d+).*\")",
                    "type": "string"
                },
                "version": {
                    "description": "Deprecated. The API version that created or updated this metric. The v2 format is used by default and cannot be changed.",
                    "enum": [
                        "V2",
                        "V1"
                    ],
                    "type": "string"
                }
            },
            "type": "object"
        }
    }
}